using Microsoft.EntityFrameworkCore;
using DLS.Models.Models;
using DLS.EF.DatabaseContexts;

namespace DLS.EF
{
    public class Program
    {
        static List<Course> courses = new List<Course>(){
            new Course() { Name = "DLS"},
            new Course() { Name = "Test"}
        };
        static List<Student> students = new List<Student>(){
            new Student() { Name = "Andreas", Email = "email", Age = 24, Gender = "Mand", Courses = courses},
            new Student() { Name = "Martin", Email = "email", Age = 30, Gender = "Mand", Courses = courses},
            new Student() { Name = "William", Email = "email", Age = 27, Gender = "Mand", Courses = courses},
            new Student() { Name = "Asger", Email = "email", Age = 24, Gender = "Mand", Courses = courses}
        };

        static List<Student> studentsSecond = new List<Student>(){
            new Student() { Name = "Emil", Email = "email", Age = 12, Gender = "Mand", Courses = courses},
            new Student() { Name = "Martine", Email = "email", Age = 35, Gender = "Kvinde", Courses = courses},
            new Student() { Name = "Andrea", Email = "email", Age = 26, Gender = "Kvinde", Courses = courses}
        };

        static List<Student> studentsAll = new List<Student>();


        static List<Teacher> teachers = new List<Teacher>(){
            new Teacher() { Name = "Todorka", Email="tdi@mail.com", Courses = new List<Course>() {courses[0]}},
            new Teacher() { Name = "Steffen", Email = "stf@mail.com", Courses = new List<Course>() {courses[1]}}
        };

        static List<Lecture> testLectures = new List<Lecture>() {
            new Lecture() {Name = "Mutation Test", Course = courses[1], RegistrationCode="SomethingAutoGenerated", Teacher=teachers[1], Students=students, Date=DateTime.Today.Date},
            new Lecture() {Name = "Unit Test", Course = courses[1], RegistrationCode="SomethingAutoGenerated", Teacher=teachers[1], Students=studentsSecond, Date=DateTime.Today.Date},
            new Lecture() {Name = "Static analysis", Course = courses[1], RegistrationCode="SomethingAutoGenerated", Teacher=teachers[1], Students=students, Date=DateTime.Today.Date}
        };
        static List<Lecture> dlsLectures = new List<Lecture>() {
            new Lecture() {Name = "RabbitMQ", Course = courses[0], RegistrationCode="SomethingAutoGenerated", Teacher=teachers[1], Students=students, Date=DateTime.Today.Date},
            new Lecture() {Name = "gRPC", Course = courses[0], RegistrationCode="SomethingAutoGenerated", Teacher=teachers[1], Students=studentsSecond, Date=DateTime.Today.Date}
        };

        static List<User> users = new List<User>() {
            new User() { Username = "admin", Password = "123", IsTeacher = true, Teacher = teachers[1]},
            new User() { Username = "asgerhs@hotmail.com", Password = "123", IsTeacher = false, Student = students[3]}
        };

        public static void Main(string[] args)
        {
            studentsAll.AddRange(students);
            studentsAll.AddRange(studentsSecond);

            using (var context = new SchoolContext())
            {
                context.Database.Migrate();
                foreach (Course c in courses)
                {
                    c.Students = studentsAll;
                    context.Courses.Add(c);
                }
                foreach (Student s in studentsAll)
                    context.Students.Add(s);
                foreach (Teacher t in teachers)
                    context.Teachers.Add(t);
                foreach (Lecture l in testLectures)
                    context.Lectures.Add(l);
                foreach (Lecture l in dlsLectures)
                    context.Lectures.Add(l);
                foreach (User u in users)
                    context.Users.Add(u);
                context.SaveChanges();
            }
        }
    }
}